do [07/08]


git init = 현재 폴더를 깃의 관리하에 두는 것
git status = 현재 상태를 확인하는 명령어
git add . = 현재 변경된 것들을 깃에 업로드
git commit -m "메시지" = 커밋 메시지를 깃에 추가
git remote add origin
git push -u origin master

[버전 확인]

java -version
javac -version

[자격 증명 관리] - [Windows 자격 증명] - [일반 자격 증명]에
내 github.com이 들어가 있는지 확인

[처음 리포지트리 만들고 나서]

cmd 창 열기
cd /
cd _dev
git init
git add .
git commit -m "아무 거나"
git remote add origin https://github.com/dooin1861/abc.git
git push -u origin master

[리포지트리 만든 이후 깃허브에 업로드 할때]

git init
git add .
git commit -m "아무 거나"
git push origin -u master

[커밋 메시지 변경할 때]

git commit --amend -m "메시지 입력"
git log -1  (변경 되었는지 확인)
git push --force origin master


 [07/09]

0b = 2진수
0 = 8진수
0x = 16진수

-locale ko_KR -encoding UTF-8 -charset UTF-8 -docencoding UTF-8

github.com/jiwoong-jung/202407JAVA

docker ps -a 컨테이너 리스트
docker run --name apa000ex2 -d -p 8880:80 httpd 생성
docker stop apa000ex1 컨테이너 정지
docker start apa000ex2 컨테이너 시작
docker rm apa000ex1 컨테이너 삭제
docker image ls = 이미지 리스트
docker image rm = 이미지 삭제
docker ps -aq, -qa = 컨테이너 ID 리스트

docker run -it --name first-ubuntu ubuntu /bin/bash - 도커에 우분투 설치
docker exec -it first-ubuntu /bin/bash - 우분투 실행
docker cp first-ubuntu:/home/ubuntu/HelloWorld.java . - 우분투에 있는 파일 복사
docker cp HelloWorld.java first-ubuntu:/home/ubuntu - 외부 파일 우분투로 복사
exit - 우분투 나가기

[도커 데스크탑에서]
/usr/local/apache2/htdocs/index.html - 수정
docker cp apa000ex2:/usr/local/apache2/htdocs/index.html . - 도커에서 디렉토리로 복사
docker cp index.html apa000ex2:/usr/local/apache2/htdocs/index.html . - 디렉토리에서 도커로 복사

docker run --name nginx000ex6 -d -p 8884:80 nginx - 엔지닉스 생성

docker run --name mysql000ex7 -dit -e MYSQL_ROOT_PASSWORD=1234 mysql - mysql 생성

docker exec -it mysql000ex7 mysql -u root -p

[mysql 명령어]
show databases;
create database test123;
use du;

desc dept;
select distinct deptno from emp;

create table dept (
       deptno int (11),
       dname varchar(14),
       loc varchar(13));

insert into dept (deptno, dname, loc)
       values (10, 'Account', 'Seoul');



[0719]

CRUD

Create - insert문
Read   - select문
Update - 
Delete  - 

public static void main(String[] args) {
		String URL = "jdbc:mysql://localhost:3307/spring5fs";	
		Connection conn = null;
		PreparedStatement pstmt = null;
		String sql = "";

		try {
			Class.forName("com.mysql.cj.jdbc.Driver");
			System.out.println("드라이버 로딩");
			conn = DriverManager.getConnection(URL, "root", "mysql");
			System.out.println("Mysql 접속 완료");

		} catch (ClassNotFoundException | SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
